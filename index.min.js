/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";

	document.body.innerHTML = "script loading...";

	// Change color based on status
	var getStatusStyle = function getStatusStyle(status) {
	    var base = "style='display: inline-block; color: #888888; width: 200px'";
	    status === "Has Self Changes" && (base = base.replace("#888888", "red"));
	    status === "Has Dep Changes" && (base = base.replace("#888888", "blue"));
	    return base;
	};

	// Change color based on project group
	var getRepositoryStyle = function getRepositoryStyle(status) {
	    var base = "style='display: inline-block; color: #888888; width: 400px'";
	    return base;
	};

	var render = function render(data) {
	    document.body.innerHTML = "\n        <b>Repository Count: " + data.repositories.length + "</b>\n        <div>\n        " + data.repositories.map(function (repository) {
	        return "\n                <div>\n                    [ <div " + getStatusStyle(repository.status) + ">" + repository.status + "</div> ]\n                      <div " + getRepositoryStyle(repository.name) + ">" + repository.name + "</div>\n                </div>\n                ";
	    }).join("\n") + "\n        </div>\n    ";
	};

	fetch("/api/call/io.naq.tools.api?request=repositories").then(function (res) {
	    return res.json();
	}).then(function (data) {
	    return render(data);
	}).catch(function (error) {
	    return console.log("Error: " + error);
	});

/***/ }
/******/ ]);